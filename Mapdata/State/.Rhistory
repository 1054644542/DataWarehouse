outfile
})
library(ggimage)
library(ggimage)
pies <- sapply(1:nrow(crime), function(i) {
outfile <- paste0("crime_", i, ".png")
plot_pie(i)+ggsave(outfile,bg="transparent")
outfile
})
radius <- sqrt(crime$population / pi)
crime$radius <- 0.2 * radius/max(radius)
crime$pie <- pies
leg1 <- gtable_filter(
ggplot_gtable(
ggplot_build(plot_pie(1) + theme(legend.position = "right"))
), "guide-box")
library(gtable)
leg1 <- gtable_filter(
ggplot_gtable(
ggplot_build(plot_pie(1) + theme(legend.position = "right"))
), "guide-box")
ggplot(crime, aes(murder, Robbery)) +
geom_image(aes(image = pie, size = I(radius))) +
geom_subview(leg1, x = 8.8, y = 50)
plot_crime <- function(i){
o<-paste0(i, ".png")
ggplot(crime, aes(murder, Robbery)) + geom_blank() +
geom_image(data = crime[i, ], aes(image = pie, size = I(radius))) +
geom_subview(p, leg1, x = 8.8, y = 50)+ggsave(o)
o
}
plot_crime <- function(i){
o<-paste0(i, ".png")
ggplot(crime, aes(murder, Robbery)) + geom_blank() +
geom_image(data = crime[i, ], aes(image = pie, size = I(radius))) +
geom_subview(p, leg1, x = 8.8, y = 50)+ggsave(o)
o
}
library(magick)
library(purrr)
order(crime$murder,decreasing=F)%>%map(plot_crime)%>%map(image_read) %>%image_join()%>%image_animate(fps = 2) %>%
image_write("crime.gif")
order(crime$murder,decreasing=F)%>%map(plot_crime)%>%map(image_read) %>%image_join()%>%image_animate(fps = 2) %>%
image_write("crime.gif")
?ggsave
?do.call
?destPoint
p <- cbind(5,52)
p
d <- destPoint(p,30,10000)
d
finalBearing(d, p)
resul
distantCircle
library("htmlwidgets", lib.loc="D:/R/R-3.4.0/library")
library(networkD3)
simpleNetwork(networkData,fontSize=25)
library(networkD3)
src <- c("A", "A", "A", "A",
"B", "B", "C", "C", "D")
target <- c("B", "C", "D", "J",
"E", "F", "G", "H", "I")
src
target
networkData <- data.frame(src, target, zoom = TRUE)
networkData
simpleNetwork(networkData)
data(MisLinks)
MisLinks
data(MisNodes)
MisNodes
forceNetwork(Links = MisLinks, Nodes = MisNodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
Group = "group", opacity = 0.8, zoom = TRUE)
shiny::runGitHub('christophergandrud/networkD3-shiny-example')
demo(package="igraph")
library(extrafont)
fonts()
font_import(pattern="msyh")
fonts()
loadfonts()
font_import()
font_import()
fonttable()
loadfonts()
?windowsFonts
?dplyr::extract
tidyr::extract
library(dplyr)
library(plotly)
air <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2011_february_us_airport_traffic.csv')
flights <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2011_february_aa_flight_paths.csv')
flights$id <- seq_len(nrow(flights))
flights$id <- seq_len(nrow(flights))
plot_geo(locationmode = 'USA-states', color = I("red")) %>%
add_markers(
data = air, x = ~long, y = ~lat, text = ~airport,
size = ~cnt, hoverinfo = "text", alpha = 0.5
) %>%
add_segments(
data = group_by(flights, id),
x = ~start_lon, xend = ~end_lon,
y = ~start_lat, yend = ~end_lat,
alpha = 0.3, size = I(1), hoverinfo = "none"
) %>%
layout(
title = 'Feb. 2011 American Airline flight paths<br>(Hover for airport names)',
geo = geo, showlegend = FALSE, height=800
)
p <- plot_geo(locationmode = 'USA-states', color = I("red")) %>%
add_markers(
data = air, x = ~long, y = ~lat, text = ~airport,
size = ~cnt, hoverinfo = "text", alpha = 0.5
) %>%
add_segments(
data = group_by(flights, id),
x = ~start_lon, xend = ~end_lon,
y = ~start_lat, yend = ~end_lat,
alpha = 0.3, size = I(1), hoverinfo = "none"
) %>%
layout(
title = 'Feb. 2011 American Airline flight paths<br>(Hover for airport names)',
geo = geo, showlegend = FALSE, height=800
)
View(air)
View(flights)
library("ggplot2")
library("RColorBrewer")
library("sp")
library("maptools")
library("rgeos")
library("plyr")
library("Cairo")
library(grid)
library(maps)
states_map <- map_data("state")
View(states_map)
ggplot()+
geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat),shape=21,fill="#D73434",col="grey",alpha = 0.5)
ggplot()+
geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)
ggplot()+
geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_size_area(max_size=15)
?coord_map
ggplot()+
geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_size_area(max_size=15)+
coord_map("polyconic")
map_world<-map_data("world")
ggplot()+
#geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
#geom_polygon(data=map_world,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_size_area(max_size=15)+
#coord_map("polyconic")
coord_map("ortho",orientation=c(25,-110,0))
ggplot()+
#geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_polygon(data=map_world,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_size_area(max_size=15)+
#coord_map("polyconic")
coord_map("ortho",orientation=c(25,-110,0))
ggplot()+
#geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_polygon(data=map_world,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_size_area(max_size=15)+
#coord_map("polyconic")
coord_map("ortho",orientation=c(20,-110,0))
ggplot()+
#geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_polygon(data=map_world,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_size_area(max_size=15)+
#coord_map("polyconic")
coord_map("ortho",orientation=c(15,-110,0))
library(rworldmap)
vignette('rworldmap')
worldMap <- getMap()%>%fortify(worldMap)
View(worldMap)
ggplot()+
#geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_polygon(data=worldMap,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_size_area(max_size=15)+
#coord_map("polyconic")
coord_map("ortho",orientation=c(15,-110,0))
ggplot()+
#geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_polygon(data=worldMap,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_size_area(max_size=15)+
#coord_map("polyconic")
coord_map("ortho",orientation=c(25,-110,0))
ggplot()+
#geom_polygon(data=states_map,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_polygon(data=worldMap,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_size_area(max_size=15)+
#coord_map("polyconic")
coord_map("ortho",orientation=c(25,-100,0))
ggplot()+
geom_polygon(data=worldMap,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_size_area(max_size=15)+
#coord_map("polyconic")
coord_map("ortho",orientation=c(25,-100,0))+
theme_minimal()
ggplot()+
geom_polygon(data=worldMap,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
scale_size_area(max_size=15)+
#coord_map("polyconic")
coord_map("ortho",orientation=c(25,-100,0))+
theme_minimal()
ggplot()+
geom_polygon(data=worldMap,aes(x=long,y=lat,group=group),fill="grey95",col="grey")
library("jsonlite")
library("ggplot2")
library(plyr)
library(dplyr)
setwd("D:/R/mapdata/State")
world_data <- fromJSON("world.json")
world_data$features$properties$ADMIN
world_city_data<-world_data$features$properties[,c("NAME","NAME_LONG","BRK_A3","POP_EST","GDP_MD_EST")]
View(world_city_data)
for(i in world_data$features$properties){
print(i)
}
for(i in world_data$features$geometry$coordinates){
print(i)
}
for(i in world_data$features$geometry$coordinates){
print(length(i))
}
class(world_data$features$geometry$coordinates[1])
class(world_data$features$geometry$coordinates[2])
class(world_data$features$geometry$coordinates[3])
mode(world_data$features$geometry$coordinates[1])
mode(world_data$features$geometry$coordinates[2])
mode(world_data$features$geometry$coordinates[3])
typeof(world_data$features$geometry$coordinates[3])
typeof(world_data$features$geometry$coordinates[2])
typeof(world_data$features$geometry$coordinates[[2]])
typeof(world_data$features$geometry$coordinates[[2]])
typeof(world_data$features$geometry$coordinates[[3]])
typeof(world_data$features$geometry$coordinates[[1]])
typeof(world_data$features$geometry$coordinates[[4]])
typeof(world_data$features$geometry$coordinates[[5]])
world_data$features$geometry$coordinates[[1]]
world_data$features$geometry$coordinates[[1]][1]
world_data$features$geometry$coordinates[[1]][,,1]
world_data$features$geometry$coordinates[[1]][,,2]
world_data$features$geometry$coordinates[1]
world_data$features$geometry$coordinates[1][,,1]
world_data$features$geometry$coordinates[1][1]
world_data$features$geometry$coordinates[1][[1]]
world_Map1<-geojson_read("world.json",what = "sp")
library(geojsonio)
library(rgdal)
world_Map1<-geojson_read("world.json",what = "sp")
remove(i)
world_Map2<-readOGR("world.json", "OGRGeoJSON")
world_Mapdata1<-world_Map1@data
View(world_Mapdata1)
world_Mapdata1<-world_Map1@data%>%.[,c("NAME","NAME_LONG","BRK_A3","POP_EST","GDP_MD_EST")]
world_MapdataPloygon1<-fortify(world_Map1)
View(world_MapdataPloygon1)
rownames(world_Mapdata1)
world_Mapdata1$id<-rownames(world_Mapdata1)
world_MapdataPloygon1<-fortify(world_Map1)%>%left_join(.,world_Mapdata1[,c(6,1,4)])
names(world_MapdataPloygon1$NAME)<-"region"
View(world_MapdataPloygon1)
names(world_MapdataPloygon1$NAME)
names(world_MapdataPloygon1)
names(world_MapdataPloygon1)["NAME"]
names(world_MapdataPloygon1)[8]
names(world_MapdataPloygon1)[8]<-"region"
ggplot(mydata,aes(map_id=NAME))+
geom_map(aes(fill=P0P_EST),map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)
ggplot(world_Mapdata1,aes(map_id=NAME))+
geom_map(aes(fill=P0P_EST),map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)+
coord_map("polyconic")
names(world_Mapdata1)
ggplot(world_Mapdata1,aes(map_id=NAME))+
geom_map(aes(fill=P0P_EST),map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)
ggplot(world_Mapdata1,aes(map_id=NAME,fill=P0P_EST))+
geom_map(map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)
ggplot(world_Mapdata1,aes(map_id=NAME))+
geom_map(aes(fill=P0P_EST),map=world_MapdataPloygon1)
View(world_Mapdata1)
str(world_Mapdata1)
ggplot(world_Mapdata1,aes(map_id=NAME))+
geom_map(aes(fill=P0P_EST),map=world_MapdataPloygon1)
ggplot(world_Mapdata1,aes(map_id=NAME))
+
geom_map(aes(fill=P0P_EST),map=world_MapdataPloygon1)
ggplot(world_Mapdata1,aes(map_id=NAME))+
geom_map(aes(fill=P0P_EST),map=world_MapdataPloygon1)
ggplot(world_Mapdata1,aes(map_id=NAME))+
geom_map(aes(fill=POP_EST),map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)
library(RColorBrewer)
ggplot(world_Mapdata1,aes(map_id=NAME))+
geom_map(aes(fill=POP_EST),map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)+
scale_fill_brewer(name="million($)",palette="Set2")+
coord_map("ortho",orientation=c(0,120,0))+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)
ggplot(world_Mapdata1,aes(map_id=NAME))+
geom_map(aes(fill=POP_EST),map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)+
scale_fill_gradient2(low="#33A15A",high="#BB0126",mid="#FCFFB7",midpoint=mean(world_Mapdata1$POP_EST))+
coord_map("ortho",orientation=c(0,120,0))+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)
ggplot(world_Mapdata1,aes(map_id=NAME))+
geom_map(aes(fill=POP_EST),map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)+
scale_fill_gradient2(low="#33A15A",high="#BB0126",mid="#FCFFB7",midpoint=mean(world_Mapdata1$POP_EST))+
coord_map("ortho",orientation=c(0,120,0))+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
theme_minimal()
world_Mapdata1<-world_Map1@data%>%.[,c("NAME","NAME_LONG","BRK_A3","POP_EST","GDP_MD_EST")]%>%rename(region=NAME)
world_Mapdata1$id<-rownames(world_Mapdata1)
ggplot(world_Mapdata1,aes(map_id=NAME))+
geom_map(aes(fill=POP_EST),map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)+
scale_fill_gradient2(low="#33A15A",high="#BB0126",mid="#FCFFB7",midpoint=mean(world_Mapdata1$POP_EST))+
coord_map("ortho",orientation=c(0,120,0))+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
theme_minimal()+
theme(line=element_blank(),axis.text=element_blank(),axis.title=element_blank())
ggplot(world_Mapdata1,aes(map_id=region))+
geom_map(aes(fill=POP_EST),map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)+
scale_fill_gradient2(low="#33A15A",high="#BB0126",mid="#FCFFB7",midpoint=mean(world_Mapdata1$POP_EST))+
coord_map("ortho",orientation=c(0,120,0))+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
theme_minimal()+
theme(line=element_blank(),axis.text=element_blank(),axis.title=element_blank())
ggplot(world_Mapdata1,aes(map_id=region))+
geom_map(aes(fill=POP_EST),map=world_MapdataPloygon1)+
expand_limits(x=world_MapdataPloygon1$long,y=world_MapdataPloygon1$lat)+
scale_fill_gradient2(low="#33A15A",high="#BB0126",mid="#FCFFB7",midpoint=mean(world_Mapdata1$POP_EST))+
coord_map("ortho",orientation=c(0,120,0))+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
theme_minimal()+
theme(axis.text=element_blank(),axis.title=element_blank())
?geojsonio
library(rworldmap)
air <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2011_february_us_airport_traffic.csv')
flights <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2011_february_aa_flight_paths.csv')
flights$id <- seq_len(nrow(flights))
worldMap <- getMap()%>%fortify(worldMap)
ggplot()+
geom_polygon(data=world_MapdataPloygon1,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=POP_EST),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
scale_size_area(max_size=15)+
coord_map("ortho",orientation=c(25,-100,0))+
theme_minimal()
midpos <- function(AD1){mean(range(AD1,na.rm=TRUE))}
centres <- ddply(world_MapdataPloygon1,.(region),colwise(midpos,.(long,lat)))
View(centres)
mynewdata<-left_join(world_Mapdata1,centres)
View(mynewdata)
ggplot()+
geom_polygon(data=world_MapdataPloygon1,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=mynewdata,aes(x=long,y=lat,size=POP_EST),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
scale_size_area(max_size=15)+
coord_map("ortho",orientation=c(25,-100,0))+
theme_minimal()
mynewdata<-left_join(centres,world_Mapdata1)
ggplot()+
geom_polygon(data=world_MapdataPloygon1,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=mynewdata,aes(x=long,y=lat,size=POP_EST),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
scale_size_area(max_size=15)+
coord_map("ortho",orientation=c(25,-100,0))+
theme_minimal()
?getMap
plot(getMap())
worldMap <- getMap()
USAMap <- getMap()%>%fortify(worldMap[worldMap$NAME=="America",])
plot(USAMap)
ggplot()+geom_polygon(data=USAMap,aes(x=long,y=lat,group=group))
USAMap <- getMap()%>%fortify(worldMap[worldMap@data$NAME=="America",])
plot(USAMap)
ggplot()+geom_polygon(data=USAMap,aes(x=long,y=lat,group=group))
USAMap <- getMap()%>%fortify(worldMap)
View(USAMap)
USAMap <- getMap()%>%fortify(worldMap)%>%[id=="United States of America",]
USAMap <- getMap()%>%fortify(worldMap)%>%filter[id=="United States of America"]
USAMap <- getMap()%>%fortify(worldMap)%>%filter(id=="United States of America")
ggplot()+
geom_polygon(data=world_MapdataPloygon1,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
scale_size_area(max_size=15)+
coord_map("ortho",orientation=c(25,-100,0))+
theme_minimal()
ggplot()+
geom_polygon(data=world_MapdataPloygon1,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
scale_size_area(max_size=15)+
coord_map("ortho",orientation=c(25,-100,0))+
theme_minimal()+
theme(axis.text=element_blank(),axis.title=element_blank())
library(Cairo)
library(showtext)
CairoPNG("D:/world_map.png",1000,900)
showtext.begin()
ggplot()+
geom_polygon(data=world_MapdataPloygon1,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red")+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
scale_size_area(max_size=15)+
coord_map("ortho",orientation=c(25,-100,0))+
theme_minimal()+
theme(axis.text=element_blank(),axis.title=element_blank())
showtext.end()
dev.off()
CairoPNG("D:/world_map.png",1000,900)
showtext.begin()
ggplot()+
geom_polygon(data=world_MapdataPloygon1,aes(x=long,y=lat,group=group),fill="grey95",col="grey")+
geom_segment(data=flights,aes(x=start_lon,y=start_lat,xend=end_lon,yend=end_lat),col="red",size=.2)+
geom_point(data=air,aes(x=long,y=lat,size=cnt),shape=21,fill="#D73434",col="grey",alpha = 0.5)+
scale_y_continuous(breaks=(-6:6)*15) +
scale_x_continuous(breaks=(-12:12)*15)+
scale_size_area(max_size=15)+
coord_map("ortho",orientation=c(25,-100,0))+
theme_minimal()+
theme(axis.text=element_blank(),axis.title=element_blank())
showtext.end()
dev.off()
install.packages("ggboxplots")
install.github(heike/ggboxplots)
library("githubinstall", lib.loc="D:/R/R-3.4.0/library")
githubinstall(ggboxplots)
githubinstall("ggboxplots")
library(ggboxplots)
ggplot(mtcars, aes(factor(cyl), mpg)+ geom_vase()
ggplot(mtcars, aes(factor(cyl), mpg))+ geom_vase()
ggplot(mtcars, aes(cyl, mpg))+ geom_vase()
?geom_vase
ggplot(mtcars, aes(factor(cyl), mpg))+geom_vase() + coord_flip()
x <- rnorm(2000)
group <- rep(1:20, 100)
y <- rep(c(1,2),1000)
qplot(y,x,facets=~group, fill=factor(y), geom="vase")
ggplot(mtcars, aes(factor(cyl), mpg))+ geom_vase(na.rm=T)
ggplot(mtcars, aes(factor(cyl), mpg))+ geom_vase(na.rm=TRUE)
ggplot(mtcars, aes(factor(cyl), mpg),na.rm=TRUE)+ geom_vase()
r format(Sys.time(), '%B %d, %Y')
format(Sys.time(), '%B %d, %Y')
install.packages("gglogo")
library(ggplot2)
library(gglogo)
data(sequences)
ggplot(data = ggfortify(sequences, "peptide")) +
geom_logo(aes(x=position, y=bits, group=element,
label=element, fill=interaction(Polarity, Water)),
alpha = 0.6)  +
scale_fill_brewer(palette="Paired") +
theme(legend.position = "bottom")
